name: Node.js CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}

      - name: Install dependencies
        run: npm install

      - name: Run server
        run: node main.js &

  terraform:
    name: "Terraform Apply"
    env:
      # AWS secrets
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_DEVOPS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_DEVOPS_SECRET_ACCESS_KEY }}
    runs-on: ubuntu-latest
    environment: production
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Format the terraform files
        run: terraform fmt

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.1

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Terraform Plan
        run: terraform plan
        working-directory: terraform

      - name: Terraform Apply
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
        run: terraform apply -auto-approve -var "ssh_private_key=${{ secrets.SSH_KEY }}"
        working-directory: terraform

      - name: Check point 1
        run: ls

      - name: Check point 2
        run: cat ../ansible/inventory.ini
        working-directory: terraform
